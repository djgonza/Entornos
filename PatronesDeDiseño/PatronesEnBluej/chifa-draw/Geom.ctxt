#BlueJ class context
comment0.params=
comment0.target=Geom()
comment1.params=x1\ y1\ x2\ y2\ px\ py
comment1.target=boolean\ lineContainsPoint(int,\ int,\ int,\ int,\ int,\ int)
comment1.text=\r\n\ Tests\ if\ a\ point\ is\ on\ a\ line.\r\n
comment10.params=x1\ y1\ x2\ y2
comment10.target=long\ length(int,\ int,\ int,\ int)
comment10.text=\r\n\ Gets\ the\ distance\ between\ to\ points\r\n
comment11.params=r\ p
comment11.target=double\ pointToAngle(java.awt.Rectangle,\ java.awt.Point)
comment11.text=\r\n\ Gets\ the\ angle\ of\ a\ point\ relative\ to\ a\ rectangle.\r\n
comment12.params=r\ angle
comment12.target=java.awt.Point\ angleToPoint(java.awt.Rectangle,\ double)
comment12.text=\r\n\ Gets\ the\ point\ on\ a\ rectangle\ that\ corresponds\ to\ the\ given\r\n\ \ \ \ angle.\r\n
comment13.params=angle\ fx\ fy
comment13.target=java.awt.Point\ polarToPoint(double,\ double,\ double)
comment13.text=\r\n\ Converts\ a\ polar\ to\ a\ point\r\n
comment14.params=r\ angle
comment14.target=java.awt.Point\ ovalAngleToPoint(java.awt.Rectangle,\ double)
comment14.text=\r\n\ Gets\ the\ point\ on\ an\ oval\ that\ corresponds\ to\ the\ given\ angle.\r\n
comment15.params=xa\ ya\ xb\ yb\ xc\ yc\ xd\ yd
comment15.target=java.awt.Point\ intersect(int,\ int,\ int,\ int,\ int,\ int,\ int,\ int)
comment15.text=\r\n\ Standard\ line\ intersection\ algorithm\r\n\ Return\ the\ point\ of\ intersection\ if\ it\ exists,\ else\ null\r\n
comment2.params=x1\ y1\ x2\ y2
comment2.target=int\ direction(int,\ int,\ int,\ int)
comment2.text=\r\n\ Returns\ the\ direction\ NORTH,\ SOUTH,\ WEST,\ EAST\ from\r\n\ one\ point\ to\ another\ one.\r\n
comment3.params=r
comment3.target=java.awt.Point\ south(java.awt.Rectangle)
comment4.params=r
comment4.target=java.awt.Point\ center(java.awt.Rectangle)
comment5.params=r
comment5.target=java.awt.Point\ west(java.awt.Rectangle)
comment6.params=r
comment6.target=java.awt.Point\ east(java.awt.Rectangle)
comment7.params=r
comment7.target=java.awt.Point\ north(java.awt.Rectangle)
comment8.params=min\ max\ value
comment8.target=int\ range(int,\ int,\ int)
comment8.text=\r\n\ Constains\ a\ value\ to\ the\ given\ range.\r\n\ @return\ the\ constrained\ value\r\n
comment9.params=x1\ y1\ x2\ y2
comment9.target=long\ length2(int,\ int,\ int,\ int)
comment9.text=\r\n\ Gets\ the\ square\ distance\ between\ two\ points.\r\n
numComments=16
